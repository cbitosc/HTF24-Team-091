{"ast":null,"code":"var _jsxFileName = \"D:\\\\COSC Hackathon 24\\\\frontend\\\\src\\\\pages\\\\recipegenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RecipeGenerator.css'; // Optional: For styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeGenerator = () => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [recipe, setRecipe] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false); // Add loading state\n\n  const handleInputChange = e => setIngredients(e.target.value);\n  const handleSearch = async () => {\n    setLoading(true);\n    const ingredientArray = ingredients.toLowerCase().split(',').map(ingredient => ingredient.trim());\n    try {\n      const response = await fetch('http://localhost:3000/recipes');\n      if (response.ok) {\n        const data = await response.json();\n        const matchedRecipe = findBestRecipe(data, ingredientArray);\n        if (matchedRecipe) {\n          setRecipe(matchedRecipe);\n          setError(null);\n        } else {\n          setError('No recipe found with the provided ingredients');\n          setRecipe(null);\n        }\n      } else {\n        setError('Failed to fetch recipes');\n      }\n    } catch (error) {\n      setError('An error occurred while fetching recipes');\n    } finally {\n      setLoading(false); // Ensure loading ends\n    }\n  };\n  const findBestRecipe = (recipes, ingredientArray) => {\n    let bestMatch = null;\n    let maxMatchCount = 0;\n    recipes.forEach(recipe => {\n      const recipeIngredients = recipe.ingredients.toLowerCase().split(',').map(ingredient => ingredient.trim());\n      const matchCount = recipeIngredients.filter(ingredient => ingredientArray.includes(ingredient)).length;\n      if (matchCount > maxMatchCount) {\n        maxMatchCount = matchCount;\n        bestMatch = recipe;\n      }\n    });\n    return bestMatch;\n  };\n  const highlightIngredients = (recipeIngredients, inputIngredients) => {\n    return recipeIngredients.split(',').map(ing => {\n      const trimmedIng = ing.trim();\n      const isHighlighted = inputIngredients.includes(trimmedIng.toLowerCase());\n      return isHighlighted ? /*#__PURE__*/_jsxDEV(\"mark\", {\n        children: trimmedIng\n      }, trimmedIng, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 40\n      }, this) : trimmedIng;\n    }).reduce((prev, curr) => [prev, ', ', curr]); // Join ingredients with commas\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Tell us your ingredients, and we\\u2019ll give you the best possible recipe!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ingredients,\n      onChange: handleInputChange,\n      placeholder: \"Enter ingredients, separated by commas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSearch,\n      disabled: loading,\n      children: loading ? 'Generating...' : 'Generate Recipe'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }, this), recipe && /*#__PURE__*/_jsxDEV(Link, {\n      to: `/recipes/${recipe._id}`,\n      className: \"recipe-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:3000/${recipe.mainImage}`,\n        alt: recipe.name,\n        className: \"recipe-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: highlightIngredients(recipe.ingredients, ingredients.split(',').map(ing => ing.trim().toLowerCase()))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Steps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(RecipeGenerator, \"em8sydJEtgnHFEhNsCe0oGTPbEU=\");\n_c = RecipeGenerator;\nexport default RecipeGenerator;\nvar _c;\n$RefreshReg$(_c, \"RecipeGenerator\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","RecipeGenerator","_s","ingredients","setIngredients","recipe","setRecipe","error","setError","loading","setLoading","handleInputChange","e","target","value","handleSearch","ingredientArray","toLowerCase","split","map","ingredient","trim","response","fetch","ok","data","json","matchedRecipe","findBestRecipe","recipes","bestMatch","maxMatchCount","forEach","recipeIngredients","matchCount","filter","includes","length","highlightIngredients","inputIngredients","ing","trimmedIng","isHighlighted","children","fileName","_jsxFileName","lineNumber","columnNumber","reduce","prev","curr","className","type","onChange","placeholder","onClick","disabled","to","_id","name","src","mainImage","alt","description","steps","step","index","_c","$RefreshReg$"],"sources":["D:/COSC Hackathon 24/frontend/src/pages/recipegenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RecipeGenerator.css'; // Optional: For styling\n\nconst RecipeGenerator = () => {\n    const [ingredients, setIngredients] = useState('');\n    const [recipe, setRecipe] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false); // Add loading state\n\n    const handleInputChange = (e) => setIngredients(e.target.value);\n\n    const handleSearch = async () => {\n        setLoading(true);\n        const ingredientArray = ingredients\n            .toLowerCase()\n            .split(',')\n            .map((ingredient) => ingredient.trim());\n\n        try {\n            const response = await fetch('http://localhost:3000/recipes');\n            if (response.ok) {\n                const data = await response.json();\n                const matchedRecipe = findBestRecipe(data, ingredientArray);\n\n                if (matchedRecipe) {\n                    setRecipe(matchedRecipe);\n                    setError(null);\n                } else {\n                    setError('No recipe found with the provided ingredients');\n                    setRecipe(null);\n                }\n            } else {\n                setError('Failed to fetch recipes');\n            }\n        } catch (error) {\n            setError('An error occurred while fetching recipes');\n        } finally {\n            setLoading(false); // Ensure loading ends\n        }\n    };\n\n    const findBestRecipe = (recipes, ingredientArray) => {\n        let bestMatch = null;\n        let maxMatchCount = 0;\n\n        recipes.forEach((recipe) => {\n            const recipeIngredients = recipe.ingredients\n                .toLowerCase()\n                .split(',')\n                .map((ingredient) => ingredient.trim());\n\n            const matchCount = recipeIngredients.filter((ingredient) =>\n                ingredientArray.includes(ingredient)\n            ).length;\n\n            if (matchCount > maxMatchCount) {\n                maxMatchCount = matchCount;\n                bestMatch = recipe;\n            }\n        });\n\n        return bestMatch;\n    };\n\n    const highlightIngredients = (recipeIngredients, inputIngredients) => {\n        return recipeIngredients\n            .split(',')\n            .map((ing) => {\n                const trimmedIng = ing.trim();\n                const isHighlighted = inputIngredients.includes(trimmedIng.toLowerCase());\n                return isHighlighted ? <mark key={trimmedIng}>{trimmedIng}</mark> : trimmedIng;\n            })\n            .reduce((prev, curr) => [prev, ', ', curr]); // Join ingredients with commas\n    };\n\n    return (\n        <div className=\"recipe-generator\">\n            <h1>Recipe Generator</h1>\n            <p>Tell us your ingredients, and we’ll give you the best possible recipe!</p>\n\n            <input\n                type=\"text\"\n                value={ingredients}\n                onChange={handleInputChange}\n                placeholder=\"Enter ingredients, separated by commas\"\n            />\n            <button className=\"btn\" onClick={handleSearch} disabled={loading}>\n                {loading ? 'Generating...' : 'Generate Recipe'}\n            </button>\n\n            {error && <p className=\"error-message\">{error}</p>}\n\n            {recipe && (\n                <Link to={`/recipes/${recipe._id}`} className=\"recipe-card\">\n                    <h2>{recipe.name}</h2>\n                    <img\n                        src={`http://localhost:3000/${recipe.mainImage}`}\n                        alt={recipe.name}\n                        className=\"recipe-image\"\n                    />\n                    <p>{recipe.description}</p>\n\n                    <h3>Ingredients:</h3>\n                    <ul>\n                        {highlightIngredients(recipe.ingredients, ingredients.split(',').map((ing) => ing.trim().toLowerCase()))}\n                    </ul>\n\n                    <h3>Steps:</h3>\n                    <ol>\n                        {recipe.steps.map((step, index) => (\n                            <li key={index}>{step}</li>\n                        ))}\n                    </ol>\n                </Link>\n            )}\n        </div>\n    );\n};\n\nexport default RecipeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}