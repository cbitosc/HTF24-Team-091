{"ast":null,"code":"var _jsxFileName = \"D:\\\\COSC Hackathon 24\\\\frontend\\\\src\\\\pages\\\\recipegenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeGenerator = () => {\n  _s();\n  const [ingredients, setIngredients] = useState('');\n  const [recipes, setRecipes] = useState([]); // Store all matching recipes\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false); // Loading state\n\n  const handleInputChange = e => setIngredients(e.target.value);\n  const handleSearch = async () => {\n    setLoading(true);\n    const ingredientArray = ingredients.toLowerCase().split(',').map(ingredient => ingredient.trim());\n    try {\n      const response = await fetch('http://localhost:3000/recipes');\n      if (response.ok) {\n        const data = await response.json();\n        const matchedRecipes = findBestRecipes(data, ingredientArray);\n        if (matchedRecipes.length > 0) {\n          setRecipes(matchedRecipes);\n          setError(null);\n        } else {\n          setError('No recipes found with the provided ingredients');\n          setRecipes([]);\n        }\n      } else {\n        setError('Failed to fetch recipes');\n      }\n    } catch (error) {\n      setError('An error occurred while fetching recipes');\n    } finally {\n      setLoading(false); // Ensure loading state ends\n    }\n  };\n  const findBestRecipes = (recipes, ingredientArray) => {\n    const matchedRecipes = recipes.map(recipe => {\n      const recipeIngredients = recipe.ingredients.toLowerCase().split(',').map(ingredient => ingredient.trim());\n      const matchCount = recipeIngredients.filter(ingredient => ingredientArray.includes(ingredient)).length;\n      return {\n        ...recipe,\n        matchCount\n      };\n    });\n    return matchedRecipes.filter(recipe => recipe.matchCount > 0) // Only include recipes with matches\n    .sort((a, b) => b.matchCount - a.matchCount);\n  };\n  const highlightIngredients = (recipeIngredients, inputIngredients) => {\n    return recipeIngredients.split(',').map(ing => {\n      const trimmedIng = ing.trim();\n      const isHighlighted = inputIngredients.includes(trimmedIng.toLowerCase());\n      return isHighlighted ? /*#__PURE__*/_jsxDEV(\"mark\", {\n        children: trimmedIng\n      }, trimmedIng, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this) : trimmedIng;\n    }).reduce((prev, curr) => [prev, ', ', curr]); // Join with commas\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recipe Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Tell us your ingredients, and we\\u2019ll give you the best possible recipes!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ingredients,\n      onChange: handleInputChange,\n      placeholder: \"Enter ingredients, separated by commas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: handleSearch,\n      disabled: loading,\n      children: loading ? 'Generating...' : 'Generate Recipes'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 23\n    }, this), recipes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-list\",\n      children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/recipes/${recipe._id}`,\n        className: \"recipe-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3000/${recipe.mainImage}`,\n          alt: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: highlightIngredients(recipe.ingredients, ingredients.split(',').map(ing => ing.trim().toLowerCase()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: step\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"match-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Match Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), \" \", recipe.matchCount, \" ingredients\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)]\n      }, recipe._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(RecipeGenerator, \"Z65Rq/O/3awY2tEIuhNvq2fXnt0=\");\n_c = RecipeGenerator;\nexport default RecipeGenerator;\nvar _c;\n$RefreshReg$(_c, \"RecipeGenerator\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","RecipeGenerator","_s","ingredients","setIngredients","recipes","setRecipes","error","setError","loading","setLoading","handleInputChange","e","target","value","handleSearch","ingredientArray","toLowerCase","split","map","ingredient","trim","response","fetch","ok","data","json","matchedRecipes","findBestRecipes","length","recipe","recipeIngredients","matchCount","filter","includes","sort","a","b","highlightIngredients","inputIngredients","ing","trimmedIng","isHighlighted","children","fileName","_jsxFileName","lineNumber","columnNumber","reduce","prev","curr","className","type","onChange","placeholder","onClick","disabled","to","_id","src","mainImage","alt","name","description","steps","step","index","_c","$RefreshReg$"],"sources":["D:/COSC Hackathon 24/frontend/src/pages/recipegenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RecipeGenerator = () => {\n    const [ingredients, setIngredients] = useState('');\n    const [recipes, setRecipes] = useState([]); // Store all matching recipes\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false); // Loading state\n\n    const handleInputChange = (e) => setIngredients(e.target.value);\n\n    const handleSearch = async () => {\n        setLoading(true);\n        const ingredientArray = ingredients\n            .toLowerCase()\n            .split(',')\n            .map((ingredient) => ingredient.trim());\n\n        try {\n            const response = await fetch('http://localhost:3000/recipes');\n            if (response.ok) {\n                const data = await response.json();\n                const matchedRecipes = findBestRecipes(data, ingredientArray);\n\n                if (matchedRecipes.length > 0) {\n                    setRecipes(matchedRecipes);\n                    setError(null);\n                } else {\n                    setError('No recipes found with the provided ingredients');\n                    setRecipes([]);\n                }\n            } else {\n                setError('Failed to fetch recipes');\n            }\n        } catch (error) {\n            setError('An error occurred while fetching recipes');\n        } finally {\n            setLoading(false); // Ensure loading state ends\n        }\n    };\n\n    const findBestRecipes = (recipes, ingredientArray) => {\n        const matchedRecipes = recipes.map((recipe) => {\n            const recipeIngredients = recipe.ingredients\n                .toLowerCase()\n                .split(',')\n                .map((ingredient) => ingredient.trim());\n\n            const matchCount = recipeIngredients.filter((ingredient) =>\n                ingredientArray.includes(ingredient)\n            ).length;\n\n            return { ...recipe, matchCount };\n        });\n\n\n        return matchedRecipes\n            .filter((recipe) => recipe.matchCount > 0) // Only include recipes with matches\n            .sort((a, b) => b.matchCount - a.matchCount);\n    };\n\n    const highlightIngredients = (recipeIngredients, inputIngredients) => {\n        return recipeIngredients\n            .split(',')\n            .map((ing) => {\n                const trimmedIng = ing.trim();\n                const isHighlighted = inputIngredients.includes(trimmedIng.toLowerCase());\n                return isHighlighted ? <mark key={trimmedIng}>{trimmedIng}</mark> : trimmedIng;\n            })\n            .reduce((prev, curr) => [prev, ', ', curr]); // Join with commas\n    };\n\n    return (\n        <div className=\"recipe-generator\">\n            <h1>Recipe Generator</h1>\n            <p>Tell us your ingredients, and we’ll give you the best possible recipes!</p>\n\n            <input\n                type=\"text\"\n                value={ingredients}\n                onChange={handleInputChange}\n                placeholder=\"Enter ingredients, separated by commas\"\n            />\n\n            <button className=\"btn\" onClick={handleSearch} disabled={loading}>\n                {loading ? 'Generating...' : 'Generate Recipes'}\n            </button>\n\n            {error && <p className=\"error-message\">{error}</p>}\n\n            {recipes.length > 0 && (\n                <div className=\"recipe-list\">\n                    {recipes.map((recipe) => (\n                        <Link key={recipe._id} to={`/recipes/${recipe._id}`} className=\"recipe-card\">\n                            <img\n                                src={`http://localhost:3000/${recipe.mainImage}`}\n                                alt={recipe.name}\n                            />\n                            <h2>{recipe.name}</h2>\n                            <p>{recipe.description}</p>\n\n                            <h3>Ingredients:</h3>\n                            <ul>\n                                <li>\n                                    {highlightIngredients(\n                                        recipe.ingredients,\n                                        ingredients.split(',').map((ing) => ing.trim().toLowerCase())\n                                    )}\n                                </li>\n                            </ul>\n\n                            <h3>Steps:</h3>\n                            <ol>\n                                {recipe.steps.map((step, index) => (\n                                    <li key={index}>{step}</li>\n                                ))}\n                            </ol>\n\n                            <p className=\"match-count\">\n                                <strong>Match Count:</strong> {recipe.matchCount} ingredients\n                            </p>\n                        </Link>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RecipeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}